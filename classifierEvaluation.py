import pandas as pd
import json
import sys

def classify(data, T):
    # reached a leaf node, return the classification result
    if 'decision' in T:
        return T['decision']
    
    if 'var' in T:
        value = data.get(T['var'])
    
    if 'edges' in T:
        for dic in T['edges']:
            if dic['edge']['value'] == value:
                return classify(data, dic)
            elif dic['edge']['value'].split()[0] == '<=' and value <= float(dic['edge']['value'].split()[1]):
                return classify(data, dic)
            elif dic['edge']['value'].split()[0] == '>' and value > float(dic['edge']['value'].split()[1]):
                return classify(data, dic)
                
    if ('edge' in T) and ('leaf' in T['edge']):
        return classify(data, T['edge']['leaf'])
    
    if ('edge' in T) and ('value' in T['edge']):
        return classify(data, T['edge']['node'])
            
if __name__ == '__main__':
    csv_file = sys.argv[1]
    json_file = sys.argv[2]

    training = pd.read_csv(csv_file)
    with open(json_file) as file:
        T = json.load(file)
        
    y_pred = []
    y = training.iloc[:,-1] 
    correct = 0
    incorrect = 0
    for i in range(len(training)):
        actual = y[i]
        data = training.iloc[i, :-1].to_dict()
        pred = classify(data, T['node'])
        if actual == pred:
            correct += 1
        else:
            incorrect +=1
        y_pred.append(pred)

    print('Total number of documents with correctly predicted authors: ' + str(correct))
    print('Total number of documents with incorrectly predicted authors: ' + str(incorrect))
    print('Overall accuracy: ' + str(correct/len(training)))
    cf_matrix = pd.crosstab(y, y_pred, rownames=['Actual'], colnames=['Predicted'])

# python3 classify.py iris.csv iris.json
# python3 classify.py heart_new.csv heart_new.json
# python3 classify.py credit.csv credit

# takes in the input file generated by knn or rf and ground truth file

# for each author in the dataset, output the total number of hits (correctly predicted), strikes (false positives predicted),
# misses (document written by author, which were not attributed to the author)
# precision, recall and f1 of knn

# 50x50 confusion matrix dump into csv file
# author names for first row and first col